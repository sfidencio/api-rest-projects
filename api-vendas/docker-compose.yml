version: '3.7'
services:
  db:
    image: postgres:13-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres@@
      POSTGRES_DB: myapp
    ports:
        - "5432:5432"
    volumes:
        - postgres-data:/var/lib/postgresql/data
  app:
    image: myapp:latest
    platform: linux/amd64
    build: .
    ports:
        - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/myapp
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres@@
        SPRING_JPA_HIBERNATE_DDL_AUTO: update
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
        - "6379:6379"
    volumes:
        - /home/conteiners/redis/data:/var/lib/redis/data

networks:
  myapp:
    driver: bridge

#Entenda o funcionamento do volumes no docker-compose
#https://devopscell.com/docker/docker-compose/volumes/2018/01/16/volumes-in-docker-compose.html

volumes:
    postgres-data:
      driver: local